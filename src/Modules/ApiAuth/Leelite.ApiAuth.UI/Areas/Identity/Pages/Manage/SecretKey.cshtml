@page
@model SecretKeyModel

@{
    ViewData["Title"] = "Api密钥";
    ViewData["ActivePage"] = "SecretKey";
}

<div class="tab-pane fade active show">

    <!-- Profile info -->
    <div class="card">
        <div class="card-header d-flex align-items-center py-0">
            <h5 class="py-3 mb-0">@ViewData["Title"]</h5>
            <div class="ms-auto my-auto">
                <a href="@Url.Page("CreateKey")" class="btn btn-success btn-icon">
                    <i class="ph-plus"></i>
                </a>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <form method="post">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>密钥</th>
                                <th>拥有者</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.PageList.Data)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => item.Id)</td>
                                    <td>@Html.DisplayFor(m => item.Key)</td>
                                    <td>@Html.DisplayFor(m => item.OwnerName)</td>
                                    <td>
                                        <button type="submit" class="btn btn-link" asp-page-handler="delete" asp-route-key="@item.Key">删除</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </form>
            </div>
            <div class="card-footer d-sm-flex justify-content-end flex-sm-wrap py-sm-2">
                <ul class="pagination align-self-end pagination-flat mt-2 mt-sm-0">
                    <li class="page-item @(Model.PageList.Page - 1 > 0 ? "" : "disabled")"><a href="@Url.Action("Index", new { page = Model.PageList.Page - 1 })" class="page-link rounded">&larr;</a></li>
                    @if (Model.PageList.Page - 1 > 0)
                    {
                        <li class="page-item"><a href="@Url.Action("Index", new { page = Model.PageList.Page - 1 })" class="page-link rounded">@(Model.PageList.Page - 1)</a></li>
                    }

                    <li class="page-item active"><a href="#" class="page-link rounded">@Model.PageList.Page</a></li>

                    @if (Model.PageList.Page * Model.PageList.PageSize < Model.PageList.TotalCount)
                    {
                        <li class="page-item"><a href="@Url.Action("Index", new { page = Model.PageList.Page + 1 })" class="page-link rounded">@(Model.PageList.Page + 1)</a></li>
                    }

                    <li class="page-item  @(Model.PageList.Page * Model.PageList.PageSize < Model.PageList.TotalCount ? "" : "disabled")"><a href="@Url.Action("Index", new { page = Model.PageList.Page + 1 })" class="page-link rounded">&rarr;</a></li>
                </ul>
            </div>
        </div>
    </div>
    <!-- /profile info -->

</div>