<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="..\..\commons.t4" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ parameter type="System.String" name="ClassName" #>
<#@ parameter type="System.String" name="ClassFullName" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="AssemblyPath" #>
<#
    var assembly = Assembly.LoadFile(AssemblyPath); 
    var classType = assembly.GetType(ClassFullName);
    var idProp = classType.GetProperties().Where(c => c.Name == "Id").FirstOrDefault();
#>
using Leelite.Framework.Data.Query.Criteria;

namespace <#=Namespace #>.Models.<#=ClassName #>Agg
{
    public static class <#=ClassName #>Criteria
    {
        public static Criterion<<#=ClassName #>> Keyword(string keyword)
        {
            if (string.IsNullOrWhiteSpace(keyword))
                return new TrueCriterion<<#=ClassName #>>();

            keyword = keyword.ToLower();

            var nameCriterion = new DirectCriterion<<#=ClassName #>>(c => c.Name.Contains(keyword));
            var descriptionCriterion = new DirectCriterion<<#=ClassName #>>(c => c.Description.Contains(keyword));

            var criterion = nameCriterion && descriptionCriterion;

            return criterion;
        }
    }
}
