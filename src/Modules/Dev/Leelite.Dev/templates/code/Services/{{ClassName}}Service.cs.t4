<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="..\..\commons.t4" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ parameter type="System.String" name="ClassName" #>
<#@ parameter type="System.String" name="ClassFullName" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="AssemblyPath" #>
<#
    var assembly = Assembly.LoadFile(AssemblyPath); 
    var classType = assembly.GetType(ClassFullName);
    var idProp = classType.GetProperties().Where(c => c.Name == "Id").FirstOrDefault();
#>
using Leelite.Framework.Domain.Command;
using Leelite.Framework.Service;
using <#=Namespace #>.Dtos.<#=ClassName #>Dtos;
using <#=Namespace #>.Interfaces;
using <#=Namespace #>.Models.<#=ClassName #>Agg;
using <#=Namespace #>.Repositories;
using Microsoft.Extensions.Logging;

namespace <#=Namespace #>.Services
{
    public class <#=ClassName #>Service : CrudService<<#=ClassName #>, <#=TypeConver(idProp.PropertyType.Name) #>, <#=ClassName #>Dto, <#=ClassName #>CreateRequest, <#=ClassName #>UpdateRequest, <#=ClassName #>QueryParameter>, I<#=ClassName #>Service
    {
        public <#=ClassName #>Service(
            I<#=ClassName #>Repository repository,
            ICommandBus commandBus,
            ILogger<<#=ClassName #>Service> logger
            ) : base(repository, commandBus, logger)
        {
        }
    }
}
