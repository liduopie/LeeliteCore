<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="..\..\commons.t4" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ parameter type="System.String" name="ClassName" #>
<#@ parameter type="System.String" name="ClassFullName" #>
<#@ parameter type="System.String" name="ModuleName" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="AssemblyPath" #>
<#
    var assembly = Assembly.LoadFile(AssemblyPath); 
    var classType = assembly.GetType(ClassFullName);
    var idProp = classType.GetProperties().Where(c => c.Name == "Id").FirstOrDefault();
#>
using <#=Namespace #>.Contexts.Configurations;
using <#=Namespace #>.Models.CategoryAgg;
using Leelite.Framework.Domain.Context;

using Microsoft.EntityFrameworkCore;

namespace <#=Namespace #>.Contexts
{
    public class <#=ModuleName #>Context : EFDbContext
    {
        public <#=ModuleName #>Context(DbContextOptions<<#=ModuleName #>Context> options) : base(options)
        {
        }

        /// <summary>
        /// Gets or sets the <see cref="DbSet{TEntity}"/> of Users.
        /// </summary>
        public virtual DbSet<<#=ClassName #>> <#=ClassName #> { get; set; }

        protected override void OnModelCreating(ModelBuilder builder)
        {
            base.OnModelCreating(builder);

            builder.ApplyConfiguration(new <#=ClassName #>Configuration());
        }
    }
}
